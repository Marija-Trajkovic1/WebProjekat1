// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Back.Migrations
{
    [DbContext(typeof(AerodromContext))]
    [Migration("20220320132132_Version1")]
    partial class Version1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AerodromDestinacija", b =>
                {
                    b.Property<int>("AerodromDestinacijeID")
                        .HasColumnType("int");

                    b.Property<int>("DestinacijaAerodromID")
                        .HasColumnType("int");

                    b.HasKey("AerodromDestinacijeID", "DestinacijaAerodromID");

                    b.HasIndex("DestinacijaAerodromID");

                    b.ToTable("AerodromDestinacija");
                });

            modelBuilder.Entity("Models.Aerodrom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NazivAerodroma")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Aerodrom");
                });

            modelBuilder.Entity("Models.Destinacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivDestinacije")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Destinacija");
                });

            modelBuilder.Entity("Models.Let", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojZauzetih")
                        .HasColumnType("int");

                    b.Property<int?>("LetoviDestinacijeID")
                        .HasColumnType("int");

                    b.Property<int>("UkupanBrojSedista")
                        .HasColumnType("int");

                    b.Property<DateTime>("VremePoletanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VremeSletanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("LetoviDestinacijeID");

                    b.ToTable("Let");
                });

            modelBuilder.Entity("Models.Putnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojPasosa")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TezinaPrtljagaUKg")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Putnik");
                });

            modelBuilder.Entity("Models.Sediste", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RedniBrojSedista")
                        .HasColumnType("int");

                    b.Property<bool>("RezervisanoSediste")
                        .HasColumnType("bit");

                    b.Property<int?>("SedisteLetID")
                        .HasColumnType("int");

                    b.Property<int?>("SedistePutnikID")
                        .HasColumnType("int");

                    b.Property<string>("TipSedista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SedisteLetID");

                    b.HasIndex("SedistePutnikID");

                    b.ToTable("Sediste");
                });

            modelBuilder.Entity("AerodromDestinacija", b =>
                {
                    b.HasOne("Models.Destinacija", null)
                        .WithMany()
                        .HasForeignKey("AerodromDestinacijeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Aerodrom", null)
                        .WithMany()
                        .HasForeignKey("DestinacijaAerodromID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Let", b =>
                {
                    b.HasOne("Models.Destinacija", "LetoviDestinacije")
                        .WithMany("DestinacijaLetovi")
                        .HasForeignKey("LetoviDestinacijeID");

                    b.Navigation("LetoviDestinacije");
                });

            modelBuilder.Entity("Models.Sediste", b =>
                {
                    b.HasOne("Models.Let", "SedisteLet")
                        .WithMany("LetoviSedista")
                        .HasForeignKey("SedisteLetID");

                    b.HasOne("Models.Putnik", "SedistePutnik")
                        .WithMany("Sedista")
                        .HasForeignKey("SedistePutnikID");

                    b.Navigation("SedisteLet");

                    b.Navigation("SedistePutnik");
                });

            modelBuilder.Entity("Models.Destinacija", b =>
                {
                    b.Navigation("DestinacijaLetovi");
                });

            modelBuilder.Entity("Models.Let", b =>
                {
                    b.Navigation("LetoviSedista");
                });

            modelBuilder.Entity("Models.Putnik", b =>
                {
                    b.Navigation("Sedista");
                });
#pragma warning restore 612, 618
        }
    }
}
